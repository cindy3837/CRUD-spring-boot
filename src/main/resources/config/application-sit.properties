#logging.level.web=TRACE
#logging.level.org.springframework.web=TRACE
#Springboot-2.7.1 兼容 springfox 3.0.0 設定
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#Server 設定
server.port=8080
server.error.include-message=always
server.error.include-binding-errors=always
#Thymeleaf, if server.servlet.context-path=/demo, swagger will be /demo/swagger-ui/index.html
server.servlet.context-path=/demo

#ANSI 顏色
spring.output.ansi.enabled=detect
spring.main.banner-mode=log

#For H2
#spring.datasource.url=jdbc:h2:mem:demo;DATABASE_TO_UPPER=false;MODE=MYSQL
spring.datasource.url=jdbc:h2:file:./h2-data/demo;DATABASE_TO_UPPER=false;MODE=MYSQL
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#swagger
springfox.documentation.enabled=true
springfox.documentation.swagger-ui.enabled=true
springdoc.api-docs.path=/api-docs

#開啟h2控制檯功能和訪問地址
spring.h2.console=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=true

#初始化 sql 開關
spring.sql.init.mode=always
#進行該配置後，每次啟動程式，程式都會執行 resources/schema.sql 檔案，對資料庫的結構進行操作，相當於新建一個表。
spring.sql.init.schema-locations=classpath:sql/schema/schema.sql
#進行該配置後，每次啟動程式，程式都會執行 resources/data.sql 檔案，對資料庫的資料操作，相當於往表中插入資料。
spring.sql.init.data-locations=classpath:sql/data/data.sql
#指定 spring jpa 預設的 schema, 也可另外在 entity class 指定
spring.jpa.properties.hibernate.default_schema = demo

# 資料庫型別宣告
spring.jpa.database = H2
# 是否開啟查詢語句在控制檯列印
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy